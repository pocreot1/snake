// Generated by CoffeeScript 1.8.0
var Game,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Game = (function() {
  Game.prototype.SPEED = 5;

  Game.prototype.ESC = [27, 13, 32];

  Game.prototype.LEFT = [37, 65];

  Game.prototype.RIGHT = [39, 68];

  Game.prototype.UP = [38, 87];

  Game.prototype.DOWN = [40, 83];

  function Game(width, height, size) {
    this.width = width != null ? width : 30;
    this.height = height != null ? height : 30;
    this.size = size != null ? size : 12;
    this.started = false;
    this.map = new Map(this, $("game_map"));
    this.snake = new Snake(this);
    this.food = new Food(this);
  }

  Game.prototype.interupt = function(e) {
    var key;
    if (!e) {
      if (this.started === true) {
        clearInterval(this.interval);
        this.started = false;
      } else {
        this.interval = setInterval(main_loop_help, 1000 / this.SPEED);
        log("speed is " + this.SPEED + " point/sec");
        this.started = true;
      }
    } else {
      e = e || window.event;
      key = e.which || e.keyCode;
      if (__indexOf.call(this.ESC, key) >= 0) {
        this.interupt();
      }
      if (__indexOf.call(this.LEFT, key) >= 0) {
        this.snake.turn_left();
      }
      if (__indexOf.call(this.RIGHT, key) >= 0) {
        this.snake.turn_right();
      }
      if (__indexOf.call(this.UP, key) >= 0) {
        this.interupt();
        if (this.SPEED < 60) {
          this.SPEED++;
        }
        this.interupt();
      }
      if (__indexOf.call(this.DOWN, key) >= 0) {
        this.interupt();
        if (this.SPEED > 1) {
          this.SPEED--;
        }
        this.interupt();
      }
    }
  };

  Game.prototype.main_loop = function() {
    this.snake.move();
    this.snake.draw();
  };

  return Game;

})();
