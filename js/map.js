// Generated by CoffeeScript 1.8.0
var Map,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Map = (function(_super) {
  __extends(Map, _super);

  Map.prototype.color = "#222";

  function Map(game) {
    var i, j, k, _i, _j, _ref, _ref1;
    this.game = game;
    this.points = [];
    this.game.g = this.game.canvas.getContext('2d');
    this.game.canvas.width = this.game.width * this.game.size;
    this.game.canvas.height = this.game.height * this.game.size;
    this.game.wrapper.style.width = "" + this.game.canvas.width + "px";
    this.game.wrapper.style.height = "" + this.game.canvas.height + "px";
    j = 0;
    for (i = _i = 0, _ref = this.game.width; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      for (k = _j = 0, _ref1 = this.game.height; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; k = 0 <= _ref1 ? ++_j : --_j) {
        this.points[j++] = [i, k];
      }
    }
    this.game.point_size = this.game.size - 2;
    this.draw();
    log("Map " + this.game.width + "x" + this.game.height + " created!");
  }

  Map.prototype.all_free = function() {
    var a, free, j, _i, _len, _ref;
    j = 0;
    free = [];
    _ref = this.points;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      a = _ref[_i];
      if (this.game.snake.is_free(a)) {
        free[j++] = a;
      }
    }
    return free;
  };

  return Map;

})(GameObject);
