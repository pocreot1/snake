// Generated by CoffeeScript 1.8.0
var Food,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Food = (function(_super) {
  __extends(Food, _super);

  Food.prototype.color = "#7e7";

  function Food(game) {
    this.game = game;
    this.spawn();
    this.draw();
  }

  Food.prototype.spawn = function() {
    var ok, points, x, y, _ref;
    ok = false;
    while (true) {
      x = random_int(0, this.game.width - 1);
      y = random_int(0, this.game.height - 1);
      points = [[x, y]];
      if (!((_ref = points[0], __indexOf.call(this.game.snake.points, _ref) >= 0) || points[0] === this.game.snake.tail)) {
        break;
      }
    }
    this.points = points;
    return log("food at [" + this.points[0] + "]");
  };

  Food.prototype.remove = function() {
    this.draw(this.points, this.game.map.color);
    return this.points = [];
  };

  Food.prototype.respawn = function() {
    this.remove();
    return this.spawn();
  };

  return Food;

})(GameObject);
